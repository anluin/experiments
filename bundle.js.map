{"version":3,"sources":["tano-swc/example/frontend/main.tsx"],"sourcesContent":["declare global {\n    const React: unknown;\n\n    namespace JSX {\n        type IntrinsicElements = {\n            html: {\n                lang: string,\n            },\n        };\n\n        type Text = [ typeof textSymbol, string ];\n        type Element = [ typeof tagSymbol, Node[], keyof IntrinsicElements ];\n        type Fragment = [ typeof fragmentSymbol, Node[] ];\n        type Node = Text | Element | Fragment;\n    }\n}\n\nconst textSymbol = Symbol();\nconst tagSymbol = Symbol();\nconst fragmentSymbol = Symbol();\n\n\nconst inflate = ([ type, contentOrChildren, optionalTagName ]: JSX.Node): Node =>\n    type === textSymbol\n        ? document.createTextNode(contentOrChildren)\n        : (node => (\n            node.append(...contentOrChildren.map(inflate)) as undefined ||\n            node\n        ))(\n            optionalTagName\n                ? document.createElement(optionalTagName)\n                : document.createDocumentFragment()\n        );\n\nconst render = (element: JSX.Node) =>\n    document.documentElement.replaceWith(inflate(element));\n\nrender(\n    <html lang=\"de\">\n    Hello, world!\n    </html>\n);\n"],"names":["textSymbol","Symbol","tagSymbol","fragmentSymbol","inflate","type","contentOrChildren","optionalTagName","document","createTextNode","node","append","map","createElement","createDocumentFragment","render","element","documentElement","replaceWith"],"mappings":"AAiBA,MAAMA,EAAaC,SACnB,MAAMC,EAAgBD,SACtB,MAAME,EAAiBF,SAGvB,MAAMG,EAAU,CAAC,CAAEC,EAAMC,EAAmBC,EAA2B,GACnEF,IAASL,EACHQ,SAASC,cAAc,CAACH,GACxB,AAACI,CAAAA,GACCA,EAAKC,MAAM,IAAIL,EAAkBM,GAAG,CAACR,KACrCM,CACJ,EACIH,EACMC,SAASK,aAAa,CAACN,GACvBC,SAASM,sBAAsB,EAAE,CAC1C,CAET,MAAMC,EAAS,AAACC,GACZR,SAASS,eAAe,CAACC,WAAW,CAACd,EAAQY,IAEjDD,EACIb,CAAAA,EAtCJ,CAsCoBF,CAAAA,EAAAA,gBAEhB,EAFAE,OAEO"}

